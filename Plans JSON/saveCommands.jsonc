[
    {
        "savecommand": {
            "description": "Save a file to server",
                "command": "save",
                "options": { //options for the save command
                    "file": true, //indicates that this command is for saving a file
                    "filename": "testfile.png", //name of the file to be saved
                    "destination": "/path/to/save", //destination path where the file will be saved
                    "mkdir": true, //create directory if it does not exist
                    "overwrite": true //be careful with this option, it will overwrite existing file
                },
                "metadata": { //metadata info for easy access
                    "id": "testfile", //unique identifier for the file
                    "category": "file/image", //category of the file
                    "json": "/public/files/file_data.json", //path to JSON file to save file data
                    "values": { //valuse to be saved in json file
                        "filename": "testfile.png",
                        "filedestination": "/path/to/save", //destination path
                        "targetfile": "/path/to/save/testfile.png", //target file path
                        "filetype": "image/png", //type of the file
                        "filesize": 1024 //size of the file in bytes. The client JS should calculate this
                    }
                },
                "debug": false //debug mode, if true, will log additional information
            
        },
        "how-it-works": "The client JavaScript will send the command in a JSON format(like this one above) to the server through the main API(ex: <serveripandport>/dsl), and for the file. The client JS will wait for 0.5s. After that, the client JS will stream the file to the save API(ex: <serveripandport>/save). The server will save it to the specified destination path(configured in the command). If the 'mkdir' option is true, the server will create the directory if it does not exist. If the 'overwrite' option is true, the server will overwrite the existing file if it exists. The server will also save the file metadata to the specified JSON file path(configured in the command). The server will return a response to the client JS with the status of the operation. If the operation is successful, the server will return a success message with the file metadata. If the operation fails, the server will return an error message with the reason for the failure.",
        "expected-output": {
            "status": "success", //status of the operation
            "message": "File saved successfully", //message for the operation
            "data": { //data object containing file metadata
                "filename": "testfile.png",
                "filedestination": "/path/to/save",
                "targetfile": "/path/to/save/testfile.png",
                "filetype": "image/png",
                "filesize": 1024,
                "id": "testfile",
                "category": "file/image"
            }
        },
        "savecommand2": {
            "description": "Save signup info to server",
                "command": "save",
                "options": {
                    "file": false,
                    "type": "signup",
                    "values": {
                        "username": "testuser", //username of the user. requred
                        "email": "test@test.com", //email of the user. Optional if not necessary/needed
                        "phone": "1234567890", //phone number of the user. Optional if not necessary/needed
                        "name": "Test User", //name of the user. Optional if not necessary/needed
                        "address": "123 Test Street, Test City, Test Country", //address of the user. Optional if not necessary/needed
                        "dob": "2000-01-01", //date of birth of the user. Optional if not necessary/needed
                        "password": "testpassword", //password of the user. Requred
                        "id": "<unique_id>" //unique identifier for the user. Auto-generated by the client JS. Optional if not nesessary
                    },
                    "json": "/public/userdata/users.json"
                },
                "debug": false //debug mode, if true, will log additional information
            },
            "how-it-works2": "The client JavaScript will send the command in a JSON format(like this one above) to the server through the main API(ex: <serveripandport>/dsl). The server will save the user data to the specified JSON file path(configured in the command). The server will return a response to the client JS with the status of the operation. If the operation is successful, the server will return a success message with the user data. If the operation fails, the server will return an error message with the reason for the failure.",
        "expected-output2": {
            "status": "success", //status of the operation
            "message": "User data saved successfully", //message for the operation
            "data": { //data object containing user data
                "username": "testuser",
                "email": "test@test.com",
                "phone": "1234567890",
                "name": "Test User",
                "address": "123 Test Street, Test City, Test Country",
                "dob": "2000-01-01",
                "password": "testpassword",
                "id": "<unique_id>" //unique identifier for the user
            }
        },
        "savecommand3": {
            "description": "Save a string(plain text if you dont know what is 'string') to server",
            "command": "save",
            "options": {
                "file": false, //indicates that this command is not for saving a file
                "type": "string", //type of the data to be saved
                "values": {
                    "content": "This is a test string to be saved.", //the string content to be saved
                    "id": "<unique_id>", //unique identifier for the string. Auto-generated by the client JS. Optional if not necessary
                    "category": "text/plain" //category of the string
                },
                "json": "/public/datas/random_data.json" //path to JSON file to save string data
            },
            "debug": false //debug mode, if true, will log additional information
        },
        "how-it-works3": "The client JavaScript will send the command in a JSON format(like this one above) to the server through the main API(ex: <serveripandport>/dsl). The server will save the string data to the specified JSON file path(configured in the command). The server will return a response to the client JS with the status of the operation. If the operation is successful, the server will return a success message with the string data. If the operation fails, the server will return an error message with the reason for the failure.",
        "expected-output3": {
            "status": "success", //status of the operation
            "message": "String data saved successfully", //message for the operation
            "data": { //data object containing string data
                "content": "This is a test string to be saved.",
                "id": "<unique_id>", //unique identifier for the string
                "category": "text/plain" //category of the string
            }
        },
        "savecommand4": {
            "description": "Save a JSON object to server",
            "command": "save",
            "options": {
                "file": false, //indicates that this command is not for saving a file
                "type": "json", //type of the data to be saved
                "values": {
                    "data": { //the JSON object to be saved
                        "key1": "value1",
                        "key2": "value2",
                        "key3": "value3"
                    },
                    "id": "<unique_id>", //unique identifier for the JSON object. Auto-generated by the client JS. Optional if not necessary
                    "category": "application/json" //category of the JSON object
                },
                "json": "/public/datas/random_data.json" //path to JSON file to save JSON data
            },
            "debug": false //debug mode, if true, will log additional information
        },
        "how-it-works4": "The client JavaScript will send the command in a JSON format(like this one above) to the server through the main API(ex: <serveripandport>/dsl). The server will save the JSON data to the specified JSON file path(configured in the command). The server will return a response to the client JS with the status of the operation. If the operation is successful, the server will return a success message with the JSON data. If the operation fails, the server will return an error message with the reason for the failure.",
        "expected-output4": {
            "status": "success", //status of the operation
            "message": "JSON data saved successfully", //message for the operation
            "data": { //data object containing JSON data
                "data": {
                    "key1": "value1",
                    "key2": "value2",
                    "key3": "value3"
                },
                "id": "<unique_id>", //unique identifier for the JSON object
                "category": "application/json" //category of the JSON object
            }
        }
    }
]
